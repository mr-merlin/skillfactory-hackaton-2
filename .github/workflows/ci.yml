name: CI/CD Pipeline - –°–±–µ—Ä–ê–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∞

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –∏ –ª–∏–Ω—Ç–∏–Ω–≥
  lint:
    name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞
    runs-on: ubuntu-latest

    steps:
      - name: üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        uses: actions/checkout@v4

      - name: üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy
          pip install -r requirements.txt

      - name: üßπ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Black —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
          black --check --diff code/ tests/ example/

      - name: üìè –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤..."
          isort --check-only --diff code/ tests/ example/

      - name: üîç –õ–∏–Ω—Ç–∏–Ω–≥ —Å Flake8
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞..."
          flake8 code/ tests/ example/ --max-line-length=100 --ignore=E203,W503

      - name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —Å MyPy
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤..."
          mypy code/ --ignore-missing-imports --no-strict-optional

  # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
  test:
    name: üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        uses: actions/checkout@v4

      - name: üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov requests

      - name: üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
        run: |
          echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."

          # –¢–µ—Å—Ç Jupyter Notebook
          echo "üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Jupyter Notebook..."
          cd tests && python test_notebook.py && cd ..

          # –¢–µ—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞
          echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."
          cd tests && python test_project.py && cd ..

      - name: üìä –ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞
        run: |
          echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–¥–∞..."
          pytest tests/ --cov=code --cov-report=xml --cov-report=html

      - name: üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ–∫—Ä—ã—Ç–∏—è
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
  api-test:
    name: üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        uses: actions/checkout@v4

      - name: üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üåê –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞
        run: |
          echo "üåê –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞..."
          cd code && python api.py &
          sleep 10
          cd ..

      - name: üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
        run: |
          echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API..."
          cd tests && python test_model.py && cd .. || echo "‚ö†Ô∏è API —Ç–µ—Å—Ç—ã –ø—Ä–æ–ø—É—â–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ, –º–æ–¥–µ–ª—å –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞)"

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
  docs:
    name: üìñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    runs-on: ubuntu-latest

    steps:
      - name: üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        uses: actions/checkout@v4

      - name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ README
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ README.md..."
          if [ ! -f "README.md" ]; then
            echo "‚ùå README.md –Ω–µ –Ω–∞–π–¥–µ–Ω"
            exit 1
          fi

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
          grep -q "## –û–ø–∏—Å–∞–Ω–∏–µ" README.md || echo "‚ö†Ô∏è –†–∞–∑–¥–µ–ª '–û–ø–∏—Å–∞–Ω–∏–µ' –Ω–µ –Ω–∞–π–¥–µ–Ω"
          grep -q "## –£—Å—Ç–∞–Ω–æ–≤–∫–∞" README.md || echo "‚ö†Ô∏è –†–∞–∑–¥–µ–ª '–£—Å—Ç–∞–Ω–æ–≤–∫–∞' –Ω–µ –Ω–∞–π–¥–µ–Ω"
          grep -q "## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ" README.md || echo "‚ö†Ô∏è –†–∞–∑–¥–µ–ª '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ' –Ω–µ –Ω–∞–π–¥–µ–Ω"

          echo "‚úÖ README.md –ø—Ä–æ–≤–µ—Ä–µ–Ω"

      - name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞–ø–æ–∫
          [ -d "code" ] || (echo "‚ùå –ü–∞–ø–∫–∞ 'code' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" && exit 1)
          [ -d "tests" ] || (echo "‚ùå –ü–∞–ø–∫–∞ 'tests' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" && exit 1)
          [ -d "example" ] || (echo "‚ùå –ü–∞–ø–∫–∞ 'example' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" && exit 1)

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
          [ -f "requirements.txt" ] || (echo "‚ùå requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω" && exit 1)
          [ -f "run_project.sh" ] || (echo "‚ùå run_project.sh –Ω–µ –Ω–∞–π–¥–µ–Ω" && exit 1)
          [ -f "analysis_report.ipynb" ] || (echo "‚ùå analysis_report.ipynb –Ω–µ –Ω–∞–π–¥–µ–Ω" && exit 1)

          echo "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö
  analysis:
    name: üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    runs-on: ubuntu-latest

    steps:
      - name: üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        uses: actions/checkout@v4

      - name: üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install jupyter nbconvert

      - name: üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ Jupyter Notebook
        run: |
          echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ Jupyter Notebook..."
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å notebook –±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
          jupyter nbconvert --to notebook --execute analysis_report.ipynb --output analysis_report_executed.ipynb || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å notebook (–≤–æ–∑–º–æ–∂–Ω–æ, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ)"

      # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≥—Ä–∞—Ñ–∏–∫–æ–≤, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –≤—ã–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã –≤ CI/CD
      # - name: üìà –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä–∞—Ñ–∏–∫–æ–≤
      #   run: |
      #     echo "üìà –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤..."
      #     [ -d "charts" ] || (echo "‚ùå –ü–∞–ø–∫–∞ 'charts' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" && exit 1)
      #     # ... –æ—Å—Ç–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤

  # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  notify:
    name: üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    runs-on: ubuntu-latest
    needs: [lint, test, api-test, docs, analysis]
    if: always()

    steps:
      - name: üìä –°—Ç–∞—Ç—É—Å —Å–±–æ—Ä–∫–∏
        run: |
          echo "üìä –°—Ç–∞—Ç—É—Å —Å–±–æ—Ä–∫–∏:"
          echo "Lint: ${{ needs.lint.result }}"
          echo "Test: ${{ needs.test.result }}"
          echo "API Test: ${{ needs.api-test.result }}"
          echo "Docs: ${{ needs.docs.result }}"
          echo "Analysis: ${{ needs.analysis.result }}"
          echo "Build: ${{ needs.build.result }}"

          if [[ "${{ needs.lint.result }}" == "success" && 
                "${{ needs.test.result }}" == "success" && 
                "${{ needs.api-test.result }}" == "success" && 
                "${{ needs.docs.result }}" == "success" &&
                "${{ needs.analysis.result }}" == "success" ]]; then
            echo "üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
          else
            echo "‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–≤–∞–ª–µ–Ω—ã"
            exit 1
          fi
